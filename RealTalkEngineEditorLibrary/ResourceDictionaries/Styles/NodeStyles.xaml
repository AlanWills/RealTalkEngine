<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:views="clr-namespace:NodeNetwork.Views;assembly=NodeNetwork"
                    xmlns:controls="clr-namespace:NodeNetwork.Views.Controls;assembly=NodeNetwork"
                    xmlns:viewModels="clr-namespace:NodeNetwork.ViewModels"
                    xmlns:reactiveUi="http://reactiveui.net"
                    xmlns:utilities="clr-namespace:NodeNetwork.Utilities"
                    xmlns:nodeViews="clr-namespace:RealTalkEngineEditorLibrary.StorySystem.NodeViews">
    <Style TargetType="{x:Type nodeViews:SpeechNodeView}">
        <Setter Property="Background" Value="#5D9CEC"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="BorderBrush" Value="Orange"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="MaxWidth" Value="200"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type nodeViews:SpeechNodeView}">
                    <Grid x:Name="Grid" ToolTip="{Binding Name
                        }">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="{x:Static views:NodeView.SelectedVisualStatesGroup}">
                                <VisualState Name="{x:Static views:NodeView.SelectedState}">
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0" To="-3" 
                                                            Storyboard.TargetName="Grid" Storyboard.TargetProperty="Margin"/>
                                        <ThicknessAnimation Duration="0" To="3" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="{x:Static views:NodeView.UnselectedState}">
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0" To="0" Storyboard.TargetName="Grid" Storyboard.TargetProperty="Margin"/>
                                        <ThicknessAnimation Duration="0" To="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Border" Margin="10,0,10,0" CornerRadius="{TemplateBinding CornerRadius}" Grid.Row="0" Grid.ColumnSpan="2" 
                                Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <!--<controls:ArrowToggleButton x:Name="CollapseButton" Width="14" Height="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,10,0,10"/>-->
                                    <TextBlock x:Name="NameLabel" TextWrapping="Wrap" Background="Transparent" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" TextAlignment="Center"
                                               FontFamily="Segoe WP Semibold" FontSize="18" Margin="10,10,20,10"/>
                                </StackPanel>

                                <ItemsControl x:Name="InputsList">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="viewModels:NodeInputViewModel">
                                            <reactiveUi:ViewModelViewHost ViewModel="{Binding}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <ItemsControl x:Name="OutputsList">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="viewModels:NodeOutputViewModel">
                                            <reactiveUi:ViewModelViewHost ViewModel="{Binding}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>

                                <Grid Width="auto" Height="10"/>
                                
                                <!--// Make a dependency property or something to create custom GUI for node
                                // Then make this style the base style for a base node class we have
                                // Will (it seems) need to re-add those dependency properties because they're not there
                                <TextBox Text="Test" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
                            </StackPanel>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>